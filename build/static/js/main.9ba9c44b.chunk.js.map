{"version":3,"sources":["Component/Button.js","Component/Calculator.js","Component/calculatorTitle.js","Component/outputScreenRow.js","Component/outputScreen.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","type","value","label","onClick","handleClick","Calculator","state","question","answer","bind","event","target","this","ans","eval","err","setState","undefined","str","substr","length","className","class","React","Component","calculatorTitle","OutputScreenRow","readOnly","OutputScreen","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ba9c44b.chunk.js","sourcesContent":["// Import React (Mandatory Step).\r\nimport React from 'react';\r\n\r\n// Create our Button component as a functional component.\r\nconst Button = (props) => {\r\nreturn (\r\n\t<input\r\n\ttype=\"button\"\r\n\tvalue={props.label}\r\n\tonClick={props.handleClick}\r\n\t/>\r\n);\t\r\n}\r\n\r\n// Export our button component.\r\nexport default Button;\r\n","// Imports.\r\nimport React from 'react';\r\nimport CalculatorTitle from './calculatorTitle.js';\r\nimport OutputScreen from './outputScreen.js';\r\nimport Button from './Button.js';\r\n\r\nclass Calculator extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n    \r\n        // set our default state\r\n        this.state = {\r\n        question: '',\r\n        answer: ''\r\n        }\r\n    \r\n        // Bind our handleClick method (sets 'this' explicitly\r\n        // to refer to this componenent) We did this because 'this'\r\n        // would refer to the source of the click events\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    // our method to handle all click events from our buttons\r\nhandleClick(event){\r\n\r\n    // get the value from the target element (button)\r\n    const value = event.target.value;\r\n    \r\n    switch (value) {\r\n        case '=': {\r\n    \r\n        // if it's an equal sign, use the eval module\r\n        // to evaluate the question ,convert the answer\r\n        // (in number) to String\r\n        if (this.state.question!=='')\r\n        {\r\n            var ans='';\r\n                try\r\n                {\r\n                    ans = eval(this.state.question);\r\n                }\r\n                catch(err)\r\n                {\r\n                    this.setState({answer: \"Math Error\"});\r\n                }\r\n                if (ans===undefined)\r\n                    this.setState({answer: \"Math Error\"});\r\n    \r\n                // update answer in our state.\r\n                else\r\n                    this.setState({ answer: ans , question: ''});\r\n                break;\r\n            }\r\n        }\r\n        case 'Clear': {\r\n    \r\n        // if it's the Clears sign, just clean our\r\n        // question and answer in the state\r\n        this.setState({ question: '', answer: '' });\r\n        break;\r\n        }\r\n    \r\n        case 'Delete': {\r\n        var str = this.state.question;\r\n            str = str.substr(0,str.length-1);\r\n            this.setState({question: str});\r\n            break;\r\n        }\r\n    \r\n    default: {\r\n    \r\n        // for every other command, update the answer in the state\r\n        this.setState({ question: this.state.question += value})\r\n        break;\r\n        }\r\n    }\r\n    }\r\n    \r\n    \r\n\trender()\r\n\t{\r\n\treturn (\r\n\t<div className=\"frame\">\r\n\t<CalculatorTitle value=\"Calculator\"/>\r\n\t<div class=\"mainCalc\">\r\n\t<OutputScreen answer = {this.state.answer} question = {this.state.question}/>\r\n\t<div className=\"button-row\">\r\n\t<Button label={'Delete'} handleClick = {this.handleClick}/>\r\n\t<Button label={'.'} handleClick = {this.handleClick}/>\r\n\t<Button label={'/'} handleClick = {this.handleClick}/>\r\n\t</div>\r\n\t<div className=\"button-row\">\r\n\t<Button label={'8'} handleClick = {this.handleClick}/>\r\n\t<Button label={'7'} handleClick = {this.handleClick}/>\r\n\t<Button label={'9'} handleClick = {this.handleClick}/>\r\n\t<Button label={'*'} handleClick = {this.handleClick}/>\r\n\t</div>\r\n\t<div className=\"button-row\">\r\n\t<Button label={'4'} handleClick = {this.handleClick}/>\r\n\t<Button label={'5'} handleClick = {this.handleClick}/>\r\n\t<Button label={'6'} handleClick = {this.handleClick}/>\r\n\t<Button label={'-'} handleClick = {this.handleClick}/>\r\n\t</div>\r\n\t<div className=\"button-row\">\r\n\t<Button label={'1'} handleClick = {this.handleClick}/>\r\n\t<Button label={'2'} handleClick = {this.handleClick}/>\r\n\t<Button label={'3'} handleClick = {this.handleClick}/>\r\n\t<Button label={'+'} handleClick = {this.handleClick}/>\r\n\t</div>\r\n\t<div className=\"button-row\">\r\n\t<Button label={'0'} handleClick = {this.handleClick}/>\r\n\t<Button label={'='} handleClick = {this.handleClick}/>\r\n\t</div>\r\n\t</div>\r\n\t<Button label={'Clear'}/>\r\n\t</div>\r\n\t);\r\n}   \r\n}\r\n\r\n\r\n// Export Calculator Component.\r\nexport default Calculator;\r\n","import React from 'react'\r\n\r\nfunction calculatorTitle(props) {\r\n    return (\r\n        <div className=\"calculator-Title\">\r\n            {props.value}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default calculatorTitle\r\n","// Import React (Mandatory Step).\r\nimport React from 'react';\r\n\r\n// Functional Component.\r\n// Used to show Question/Answer.\r\nconst OutputScreenRow = (props) => {\r\nreturn (\r\n\t<div className=\"screen-row\">\r\n\t<input type=\"text\" readOnly value={props.value}/>\r\n\t</div>\r\n)\r\n}\r\n\r\n// Export Output Screen Row.\r\nexport default OutputScreenRow;\r\n","    // Import React (Mandatory Step).\r\nimport React from 'react';\r\n// Import Output Screen Row.\r\nimport OutputScreenRow from './outputScreenRow.js';\r\n\r\n// Functional Component.\r\n// Use to hold two Screen Rows.\r\nconst OutputScreen = (props) => {\r\nreturn (\r\n\t<div className=\"screen\">\r\n\t<OutputScreenRow value={props.question}/>\r\n\t<OutputScreenRow value={props.answer}/>\r\n\t</div>\r\n)\r\n}\r\n\r\n// Export Output Screen.\r\nexport default OutputScreen;\r\n","import './App.css';\nimport Calculator from './Component/Calculator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Calculator/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}